{
  "openapi": "3.0.0",
  "info": {
    "title": "Rest API Task",
    "description": "Learning session at madtive studio",
    "version": "1.0.0"
  },
  "paths": {
    "/persons": {
      "post": {
        "tags": ["person"],
        "summary": "Create person.",
        "description": "asdfasdf",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
          
        },
        "responses": {
          "200": {
            "description": "Person created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["person"],
        "summary": "Create person.",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of user names",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPerson"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          }
        }
      }
    },
    "/persons/{id}": {
      "patch":{
        "tags": ["person"],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
          ],
        "summary": "Update person.",
        "description": "asdfasdf",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
          
        },
        "responses": {
          "200": {
            "description": "Person created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          }
        }
      },
      "delete":{
        "tags": ["person"],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
          ],
        "summary": "Delete person.",
        "description": "asdfasdf",
        "responses": {
          "200": {
            "description": "Person deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          }
        }
      }
    },
    "/persons/{id}/image": {
      "patch":{
        "tags": ["person"],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
          ],
        "summary": "Update image person.",
        "description": "asdfasdf",
        "requestBody": {
          "content": {
            "multipart/form-data":{
              "schema": {
                "properties": {
                  "file": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Person created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Person": {
        "properties": {
          "name": {
            "type": "string",
            "default": "John doe"
          },
          "bod": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Success": {
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Pagination": {
        "properties": {
          "page": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "total_page": {
            "type": "integer"
          }
        }
      },
      "PaginatedPerson": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Person"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      }
    }
  }
}